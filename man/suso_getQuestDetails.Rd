% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/httr2_suso_api_Questionnaire.R
\name{suso_getQuestDetails}
\alias{suso_getQuestDetails}
\title{Survey Solutions API call for questionnaire}
\usage{
suso_getQuestDetails(
  server = suso_get_api_key("susoServer"),
  apiUser = suso_get_api_key("susoUser"),
  apiPass = suso_get_api_key("susoPass"),
  workspace = NULL,
  token = NULL,
  questID = NULL,
  version = NULL,
  operation.type = c("list", "statuses", "structure", "interviews"),
  AssId = NULL,
  InterviewKey = NULL,
  errorsCount = NULL,
  errosCountFilter = c("lower", "higher", "equal"),
  interviewMode = c("CAPI", "CAWI"),
  notAnsweredCount = NULL,
  notAnsweredCountFilter = c("lower", "higher", "equal"),
  QuestionnaireVariable = NULL,
  ResponsibleName = NULL,
  responsibleRole = c("INTERVIEWER", "SUPERVISOR"),
  workStatus = c("All", "SupervisorAssigned", "InterviewerAssigned",
    "RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
    "RejectedByHeadquarters", "ApprovedByHeadquarters"),
  supervisorName = NULL
)
}
\arguments{
\item{server}{Survey Solutions server address}

\item{apiUser}{Survey Solutions API user}

\item{apiPass}{Survey Solutions API password}

\item{workspace}{server workspace, if nothing provided, defaults to primary}

\item{token}{If Survey Solutions server token is provided \emph{usr} and \emph{pass} will be ignored}

\item{questID}{\emph{QuestionnaireId} for which details should be exported}

\item{version}{questionnaire version}

\item{operation.type}{if \emph{list} is specified a list of all questionnaires on the server. If
\emph{statuses} a vector of all questionnaire statuses. If \emph{structure} is specified, it returns a list
containing all questions, rosters etc. of the specific questionnaire, as well as all validations.
If \emph{interviews} is specified, all interviews for a specific questionnaire. See details bellow.}

\item{AssId}{Assignment ID (only required if operations.type is\emph{interviews})}

\item{InterviewKey}{Interview key (only required if operations.type is\emph{interviews})}

\item{errorsCount}{desired number of errors (only required if operations.type is\emph{interviews})}

\item{errosCountFilter}{relational type for error counts, either smaller equal, equal or greater equal than
the number specified in \code{errorsCount}, if not supplied defaults to lower equal than  \emph{interviews})
(only required if operations.type is\emph{interviews})}

\item{interviewMode}{Interview mode (CAWI or CAPI) (only required if operations.type is\emph{interviews})}

\item{notAnsweredCount}{number of unanswered questions (only required if operations.type is\emph{interviews})}

\item{notAnsweredCountFilter}{relational type for unanswered question counts, either smaller equal, equal or greater equal than
the number specified in \code{notAnsweredCount}, if not supplied defaults to lower equal than  \emph{interviews})
(only required if operations.type is\emph{interviews})}

\item{QuestionnaireVariable}{the variable for the questionnaire (only required if operations.type is\emph{interviews})}

\item{ResponsibleName}{Name of the person responsible (only required if operations.type is\emph{interviews})}

\item{responsibleRole}{Role of the person responsible (only required if operations.type is\emph{interviews})}

\item{workStatus}{of the interview (only required if operations.type is\emph{interviews})}

\item{supervisorName}{Name of the supervisor of the responsible user (only required if operations.type is\emph{interviews})}
}
\description{
\code{suso_getQuestDetails} implements all Questionnaire related API commands. It allows for different operation types,
see details bellow for further clarification.
}
\details{
If list is selected, then list of questionnaires is returned.

If statuses is selected, a list of all available questionnaire statuses is returned (deprecated).

In case structure is chosen the return value is a list with two data.table elements:
\itemize{
\item List element \emph{q} contains all questions, rosters etc.
\item List element \emph{val} contains all validations
}
In this way it is straightforward to use the returen value for questionnaire manuals and the likes.

In case interviews is selected, a list of all interviews for the specific questionnaire is returned.
}
