% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/httr2_suso_export_data.R
\name{suso_export}
\alias{suso_export}
\title{Survey Solutions API call to generate and download the data}
\usage{
suso_export(
  server = suso_get_api_key("susoServer"),
  apiUser = suso_get_api_key("susoUser"),
  apiPass = suso_get_api_key("susoPass"),
  token = NULL,
  workspace = suso_get_api_key("workspace"),
  questID = NULL,
  version = NULL,
  from_date = NULL,
  from_time = "00:00:00",
  to_date = NULL,
  to_time = "23:59:59",
  workStatus = c("All", "SupervisorAssigned", "InterviewerAssigned",
    "RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
    "RejectedByHeadquarters", "ApprovedByHeadquarters"),
  addTranslation = NULL,
  reloadTimeDiff = 1,
  inShinyApp = F,
  verbose = FALSE,
  weight_file = NULL,
  process_mapquestions = FALSE,
  combineFiles = TRUE
)
}
\arguments{
\item{server}{Survey Solutions server address}

\item{apiUser}{Survey Solutions API user}

\item{apiPass}{Survey Solutions API password}

\item{token}{If Survey Solutions server token is provided \emph{apiUser} and \emph{apiPass} will be ignored}

\item{workspace}{server workspace, if nothing provided, defaults to primary}

\item{questID}{Questionnaire ID}

\item{version}{Questionnaire version}

\item{from_date}{if provided, only interviews started on this date will be included}

\item{from_time}{if provided, only interviews started at this time will be included}

\item{to_date}{if provided, only interviews started until this date will be included}

\item{to_time}{if provided, only interviews started until this time will be included}

\item{workStatus}{define which statuses the file should inlude (i.e. \emph{Restored,Created,SupervisorAssigned,InterviewerAssigned,
RejectedBySupervisor,ReadyForInterview,
SentToCapi,Restarted,Completed,ApprovedBySupervisor,
RejectedByHeadquarters,ApprovedByHeadquarters,Deleted}), if NULL all is exported}

\item{addTranslation}{if not NULL, the translation name as specified in the designer, which will then be applied value labels
\emph{(not implemented yet!)}}

\item{reloadTimeDiff}{time difference in hours between last generated file and now}

\item{inShinyApp}{if True, file interacts with shiny progress bar}

\item{verbose}{if TRUE, prints out information about the progress}

\item{weight_file}{file path to file with survey weights. if provided, the weights will be added to the export}

\item{process_mapquestions}{should map questions be processed to spatial (sf) objects \emph{(experimental!)}}

\item{combineFiles}{if TRUE, the export will be combined into single data.table, see details for the processing steps}
}
\description{
Generates and downloads the data from your Survey Solutions server.
}
\details{
This API call uses the tab export format and uses information from the included
questionnaire document to assign value labels to any factor variables. Currently this is done
for single select and multiselect questions.
If you export the data with \emph{combineFiles = FALSE} a list will be returned with the following structure:
\itemize{
\item it is returned as a LIST with up to 4 different lists. The list names are:
\itemize{
\item \emph{main} Contains the top level data, and (if available interviewer comments)
\item \emph{R1} All rosters in roster level 1
\item \emph{R2} All rosters in roster level 2
\item \emph{R3} All rosters in roster level 3
}
\item Number of lists depends on the level of roster nesting
\item All variable names are transformed to lower case and categorical variables are consistently labeled
\item Consistent id variables are generated with
\itemize{
\item interview__id transformed to id
\item parent ids consistently number starting from id (questionnairid) to idX (maximum id3)
}
\item List elements are returned as data.tables
\item Allows for specification of reload time (i.e. generation of new download file)
\item PRESERVES categorical labels \emph{and} values.
}
If however, you export the data with \emph{combineFiles = TRUE} a single data.table containing all the data in wide
format will be returned. This is the result of the following processing steps:
\itemize{
\item First all roster files are cast into wide format.
\item Second the rosters are merged from bottom to top.
\item Third the result of the previous step is merged with the main file
}
The resulting data.table contains value labels for factor variables. If the file path
to a weight file is provided, the these will be added too, and is as such ready
for analysis.
}
